[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Learn Every Day",
    "section": "",
    "text": "Welcome To My Blog\n\n\n\n\n\n\nmanual\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nISLP Introduction\n\n\n\n\n\n\nlearning\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHow to use Github actions to build a docker image\n\n\n\n\n\n\nGit\n\n\nDocker\n\n\n\n\n\n\n\n\n\nMar 18, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Using the Welcome Post as my own manual for managing this blog. Welcome!\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "",
    "text": "Quick manual on how to use Github actions to build a docker image"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bonjour",
    "section": "",
    "text": "Hi! I’m Sandrine. This is my personal website. Here you can find a lot of content about Machine Learning, R, Python, Git and GitHub and anything I’m interested in. Feel free to explore my website and get in touch if you have any suggestion!"
  },
  {
    "objectID": "posts/new_post/index.html",
    "href": "posts/new_post/index.html",
    "title": "How to add a new Post",
    "section": "",
    "text": "It is very easy.\n\nCreate a sub-directory within posts and add an index.qmd file in this directory\n\nThat qmd file is the new blog post and when you render that, the blog home page will automatically update to include the newest post at the top of the listing.\nThen just do quarto preview."
  },
  {
    "objectID": "posts/post-with-code/index.html#example-files",
    "href": "posts/post-with-code/index.html#example-files",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "Example Files",
    "text": "Example Files\n\napp.py\nprint(\"Hello Test!\")\n\n\nrequirements.txt\n# This file can be left empty or include dependencies\n\n\n.gitignore\n# This file can be left empty or include dependencies"
  },
  {
    "objectID": "posts/post-with-code/index.html#dockerfile",
    "href": "posts/post-with-code/index.html#dockerfile",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "Dockerfile",
    "text": "Dockerfile\n# Use an official Python image as the base\nFROM python:3.11\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy project files into the container\nCOPY . /app/\n\n# Create a virtual environment in /app/venv\nRUN python -m venv venv\n\n# Activate the virtual environment and install dependencies\nRUN /app/venv/bin/pip install --upgrade pip && \\\n    /app/venv/bin/pip install --no-cache-dir -r requirements.txt\n\n# Run the application using the virtual environment\nCMD [\"/app/venv/bin/python\", \"app.py\"]"
  },
  {
    "objectID": "posts/post-with-code/index.html#github-actions-workflow-docker-build.yml",
    "href": "posts/post-with-code/index.html#github-actions-workflow-docker-build.yml",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "GitHub Actions Workflow (docker-build.yml)",
    "text": "GitHub Actions Workflow (docker-build.yml)\nname: Build and Push Docker Image\n\non:\n  push:\n    branches:\n      - main  # Change this if using a different branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Log in to DockerHub\n        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and Push Docker Image\n        uses: docker/build-push-action@v4\n        with:\n          context: .\n          file: ./Dockerfile\n          push: true\n          platforms: linux/amd64,linux/arm64\n          tags: ${{ secrets.DOCKER_USERNAME }}/docker_test:latest"
  },
  {
    "objectID": "posts/post-with-code/index.html#storing-docker-hub-credentials-in-github-secrets",
    "href": "posts/post-with-code/index.html#storing-docker-hub-credentials-in-github-secrets",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "Storing Docker Hub Credentials in GitHub Secrets",
    "text": "Storing Docker Hub Credentials in GitHub Secrets\nSince a free DockerHub account allows only one private repository, credentials must be stored securely in GitHub:\n\nGo to GitHub &gt; Your Repository &gt; Settings &gt; Secrets and variables &gt; Actions.\nClick New repository secret and add:\n\nDOCKER_USERNAME = Your DockerHub username.\nDOCKER_PASSWORD = Your DockerHub password."
  },
  {
    "objectID": "posts/post-with-code/index.html#verifying-the-setup",
    "href": "posts/post-with-code/index.html#verifying-the-setup",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "Verifying the Setup",
    "text": "Verifying the Setup\nAfter pushing changes to the repository, GitHub will automatically build and push the Docker image to DockerHub. You can verify the process:\n\nOn DockerHub: Check that the image was successfully pushed.\nOn GitHub: Inspect the logs in GitHub Actions to confirm the build and push process was completed successfully."
  },
  {
    "objectID": "posts/post-with-code/index.html#setting-up-a-git-repository",
    "href": "posts/post-with-code/index.html#setting-up-a-git-repository",
    "title": "Setting Up a GitHub Repository with Docker and GitHub Actions",
    "section": "Setting Up a Git Repository",
    "text": "Setting Up a Git Repository\nTo set up a Git repository and integrate it with Docker and GitHub Actions:\n\nCreate a new repository on GitHub.\nClone the repository to your local machine.\nEnsure the following minimum required files are included in the repository:\n\n.github/workflows/docker-build.yml: Defines the GitHub Actions workflow for building and pushing the Docker image.\nDockerfile: Contains the instructions to build the Docker image.\napp.py: A simple Python script (e.g., print(\"Hello Test!\")).\nrequirements.txt: Can be empty or contain dependencies.\n.gitignore: Can be empty but is useful for ignoring unnecessary files.\n\n\n\nExample Files\n\napp.py\nprint(\"Hello Test!\")\n\n\nrequirements.txt\n# This file can be left empty or include dependencies\n\n\n.gitignore\n# This file can be left empty or include dependencies\n\n\nDockerfile\n# Use an official Python image as the base\nFROM python:3.11\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy project files into the container\nCOPY . /app/\n\n# Create a virtual environment in /app/venv\nRUN python -m venv venv\n\n# Activate the virtual environment and install dependencies\nRUN /app/venv/bin/pip install --upgrade pip && \\\n    /app/venv/bin/pip install --no-cache-dir -r requirements.txt\n\n# Run the application using the virtual environment\nCMD [\"/app/venv/bin/python\", \"app.py\"]\n\n\ndocker-build.yml\nname: Build and Push Docker Image\n\non:\n  push:\n    branches:\n      - main  # Change this if using a different branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Log in to DockerHub\n        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and Push Docker Image\n        uses: docker/build-push-action@v4\n        with:\n          context: .\n          file: ./Dockerfile\n          push: true\n          platforms: linux/amd64,linux/arm64\n          tags: ${{ secrets.DOCKER_USERNAME }}/docker_test:latest"
  },
  {
    "objectID": "posts/github-docker/index.html",
    "href": "posts/github-docker/index.html",
    "title": "How to use Github actions to build a docker image",
    "section": "",
    "text": "Setting Up a GitHub Repository with Docker and GitHub Actions"
  },
  {
    "objectID": "posts/github-docker/index.html#setting-up-a-git-repository",
    "href": "posts/github-docker/index.html#setting-up-a-git-repository",
    "title": "How to use Github actions to build a docker image",
    "section": "Setting Up a Git Repository",
    "text": "Setting Up a Git Repository\n\nCreate a new repository on GitHub.\nClone the repository to your local machine.\nEnsure the following minimum required files are included in the repository:\n\n.github/workflows/docker-build.yml: Defines the GitHub Actions workflow for building and pushing the Docker image.\nDockerfile: Contains the instructions to build the Docker image.\napp.py: A simple Python script (e.g., print(\"Hello Test!\")).\nrequirements.txt: Can be empty or contain dependencies.\n.gitignore: Can be empty but is useful for ignoring unnecessary files."
  },
  {
    "objectID": "posts/github-docker/index.html#storing-docker-hub-credentials-in-github-secrets",
    "href": "posts/github-docker/index.html#storing-docker-hub-credentials-in-github-secrets",
    "title": "How to use Github actions to build a docker image",
    "section": "Storing Docker Hub Credentials in GitHub Secrets",
    "text": "Storing Docker Hub Credentials in GitHub Secrets\nCredentials must be stored securely in GitHub:\n\nGo to GitHub &gt; Your Repository &gt; Settings &gt; Secrets and variables &gt; Actions.\nClick New repository secret and add:\n\nDOCKER_USERNAME = Your DockerHub username.\nDOCKER_PASSWORD = Your DockerHub password.\n\n\nA free DockerHub account allows only one private repository."
  },
  {
    "objectID": "posts/github-docker/index.html#verifying-the-setup",
    "href": "posts/github-docker/index.html#verifying-the-setup",
    "title": "How to use Github actions to build a docker image",
    "section": "Verifying the Setup",
    "text": "Verifying the Setup\nAfter pushing changes to the repository, GitHub will automatically build and push the Docker image to DockerHub. You can verify the process:\n\nOn DockerHub: Check that the image was successfully pushed.\nOn GitHub: Inspect the logs in GitHub Actions to confirm the build and push process was completed successfully."
  },
  {
    "objectID": "posts/welcome/index.html#test2",
    "href": "posts/welcome/index.html#test2",
    "title": "Welcome To My Blog",
    "section": "test2",
    "text": "test2"
  },
  {
    "objectID": "posts/github-docker/index.html#creating-some-files",
    "href": "posts/github-docker/index.html#creating-some-files",
    "title": "How to use Github actions to build a docker image",
    "section": "Creating some files",
    "text": "Creating some files\n\napp.py\n\nprint(\"Hello Test!\")\n\nrequirements.txt\n\n# This file can be left empty or include dependencies\n\n.gitignore\n\n# This file can be left empty or include dependencies\n\nDockerfile\n\n# Use an official Python image as the base\nFROM python:3.11\n\n# Set the working directory in the container\nWORKDIR /app\n\n# Copy project files into the container\nCOPY . /app/\n\n# Create a virtual environment in /app/venv\nRUN python -m venv venv\n\n# Activate the virtual environment and install dependencies\nRUN /app/venv/bin/pip install --upgrade pip && \\\n    /app/venv/bin/pip install --no-cache-dir -r requirements.txt\n\n# Run the application using the virtual environment\nCMD [\"/app/venv/bin/python\", \"app.py\"]\n\ndocker-build.yml\n\nname: Build and Push Docker Image\n\non:\n  push:\n    branches:\n      - main  # Change this if using a different branch\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout Repository\n        uses: actions/checkout@v3\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Log in to DockerHub\n        uses: docker/login-action@v2\n        with:\n          username: ${{ secrets.DOCKER_USERNAME }}\n          password: ${{ secrets.DOCKER_PASSWORD }}\n\n      - name: Build and Push Docker Image\n        uses: docker/build-push-action@v4\n        with:\n          context: .\n          file: ./Dockerfile\n          push: true\n          platforms: linux/amd64,linux/arm64\n          tags: ${{ secrets.DOCKER_USERNAME }}/docker_test:latest\nNote: I set up platforms as I will use the image on a Mac."
  },
  {
    "objectID": "About.html",
    "href": "About.html",
    "title": "Bonjour",
    "section": "",
    "text": "Hi! I’m Sandrine. This is my personal website. Here you can find a lot of content about Machine Learning, R, Python, Git and GitHub and anything I’m interested in. Feel free to explore my website and get in touch if you have any suggestion!"
  },
  {
    "objectID": "posts/welcome/index.html#how-to-add-a-new-post",
    "href": "posts/welcome/index.html#how-to-add-a-new-post",
    "title": "Welcome To My Blog",
    "section": "How to add a new post",
    "text": "How to add a new post\nIt is very easy.\n\nCreate a sub-directory within posts and add an index.qmd file in this directory\n\nThat qmd file is the new blog post and when you render that, the blog home page will automatically update to include the newest post at the top of the listing.\nThen just do quarto preview."
  },
  {
    "objectID": "posts/welcome/index.html#how-to",
    "href": "posts/welcome/index.html#how-to",
    "title": "Welcome To My Blog",
    "section": "How to",
    "text": "How to"
  },
  {
    "objectID": "posts/welcome/index.html#how-to-update",
    "href": "posts/welcome/index.html#how-to-update",
    "title": "Welcome To My Blog",
    "section": "How to update",
    "text": "How to update"
  },
  {
    "objectID": "posts/welcome/index.html#how-to-update-css",
    "href": "posts/welcome/index.html#how-to-update-css",
    "title": "Welcome To My Blog",
    "section": "How to update css",
    "text": "How to update css\nThe easiest way is to open the website in Chrome and look inspect the page. Then when you find exactly the class you want to update, you just update the scss file\nFor example, I wanted the TOC title in blue: I have added\nh2#toc-title {\n  color:$blue;\n}"
  },
  {
    "objectID": "posts/welcome/index.html#using-the-welcome",
    "href": "posts/welcome/index.html#using-the-welcome",
    "title": "Welcome To My Blog",
    "section": "Using the Welcome",
    "text": "Using the Welcome"
  },
  {
    "objectID": "posts/welcome/index.html#using-the-welcome-post-as-a",
    "href": "posts/welcome/index.html#using-the-welcome-post-as-a",
    "title": "Welcome To My Blog",
    "section": "Using the Welcome Post as a",
    "text": "Using the Welcome Post as a"
  },
  {
    "objectID": "posts/welcome/index.html#using-the-welcome-post-as-my-ow",
    "href": "posts/welcome/index.html#using-the-welcome-post-as-my-ow",
    "title": "Welcome To My Blog",
    "section": "Using the Welcome Post as my ow",
    "text": "Using the Welcome Post as my ow"
  },
  {
    "objectID": "posts/welcome/index.html#using-the-welcome-post-as-my-own-manual-for-managing-this-blog",
    "href": "posts/welcome/index.html#using-the-welcome-post-as-my-own-manual-for-managing-this-blog",
    "title": "Welcome To My Blog",
    "section": "Using the Welcome Post as my own manual for managing this blog",
    "text": "Using the Welcome Post as my own manual for managing this blog"
  },
  {
    "objectID": "posts/ISLP1/index.html",
    "href": "posts/ISLP1/index.html",
    "title": "ISLP Introduction",
    "section": "",
    "text": "I discovered “An Introduction to Statistical Learning” (ISLR) a few years ago, and since then, it’s become my go-to reference for machine learning. Lately, I’ve been itching to dive deeper into the new edition—especially with the updated chapters, Python labs, and all the fresh content.\nBetween the book itself, the video lectures available on edX (and other platforms), and the awesome book club run by the DSLC community, I’ve really immersed myself in this world.\nIt’s been the perfect opportunity to revisit the fundamentals with a fresh, more relaxed mindset. Learning just for the joy of it—rather than to pass a test—is a totally different experience. And honestly, it’s so much more satisfying.\nTo keep a record of this deep dive, I decided to start a blog. The good news? It’s incredibly easy to set up with Quarto, and hosting it on GitHub is a breeze.\nI’m not trying to summarize the book or highlight the key concepts. That’s not the goal. I just want to take the time to explore the parts that speak to me—to reflect, to play, to understand better. Kind of like a personal study journal, but online.\nISLP newest editation has a chapter on deep learning. I always was curious of deep learning algorithms but never had time to really learnt about them. I am not talking of coding a Neural Network but to underatand what is behind and how some “classical” rules don’t apply\nFreedom or p &gt;&gt; n\nQuand on etudie l’algebre lineaire avant d’apprendre la linear regression, on pense de suite a inversibilite des matrices donc le nombre de parametres doit necessairesment etre plus petit que n. Beacoup de loi statistique depend d’un degree de freedom Comme le Chi2, la loi de student et la loi de Fisher.\nIl est vrai qu’on peut trouver des solutions - Gradient Descent ou utiliser des methodes de regularisations pour les cas ou p &gt; n.\nDans les reseaux neuronaux le nobre de parametres est plus grand que le nombre d’observation. Consider a neural network with two hidden layers: p = 4 input units, 2 units in the frst hidden layer, 3 units in the second hidden layer, and a single output. –&gt; 23 parameters (4+1)2 + (2+1)3 + (3+1)*1\nValidation"
  },
  {
    "objectID": "ISLP/index.html",
    "href": "ISLP/index.html",
    "title": "Welcome",
    "section": "",
    "text": "I discovered “An Introduction to Statistical Learning” (ISLR) a few years ago, and since then, it’s become my go-to reference for machine learning. A real classic!\nLately, I’ve been itching to dive deeper into the new edition—especially with the updated chapters, Python labs, and all the fresh content.\nBetween the book itself, the video lectures available on edX (and other platforms), and the awesome book club run by the DSLC community, I’ve really immersed myself in this world.\nIt’s been the perfect opportunity to revisit the fundamentals with a fresh, more relaxed mindset. Learning just for the joy of it—rather than to pass a test—is a totally different experience. And honestly, it’s so much more satisfying.\nTo keep a record of this deep dive, I decided to start a blog. The good news? It’s incredibly easy to set up with Quarto, and hosting it on GitHub is a breeze.\nI’m not trying to summarize the book or highlight the key concepts. That’s not the goal. I just want to take the time to explore the parts that speak to me—to reflect, to play, to understand better. Kind of like a personal study journal, but online."
  }
]